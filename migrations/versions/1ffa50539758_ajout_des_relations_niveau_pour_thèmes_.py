"""Ajout des relations niveau pour thèmes et tags

Revision ID: 1ffa50539758
Revises: c196b711ae07
Create Date: 2025-03-16 15:28:52.856274

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1ffa50539758'
down_revision = 'c196b711ae07'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_levels'),  # Ajout du nom de contrainte
    sa.UniqueConstraint('name', name='uq_level_name')  # Ajout du nom de contrainte
    )
    op.create_table('themes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], name='fk_theme_level'),
    sa.PrimaryKeyConstraint('id', name='pk_themes'),  # Ajout du nom de contrainte
    sa.UniqueConstraint('name', 'level_id', name='uq_theme_name_level')
    )
    with op.batch_alter_table('exercice_tags', schema=None) as batch_op:
        batch_op.alter_column('exercice_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)

    with op.batch_alter_table('exercices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('level_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('theme_id', sa.Integer(), nullable=True))
        batch_op.alter_column('level',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('theme',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.create_foreign_key('fk_exercice_level', 'levels', ['level_id'], ['id'])
        batch_op.create_foreign_key('fk_exercice_theme', 'themes', ['theme_id'], ['id'])

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('level_id', sa.Integer(), nullable=True))
        batch_op.create_unique_constraint('uq_tag_name', ['name'])
        batch_op.create_foreign_key('fk_tag_level', 'levels', ['level_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tag_level', type_='foreignkey')
        batch_op.drop_constraint('uq_tag_name', type_='unique')
        batch_op.drop_column('level_id')

    with op.batch_alter_table('exercices', schema=None) as batch_op:
        batch_op.drop_constraint('fk_exercice_theme', type_='foreignkey')
        batch_op.drop_constraint('fk_exercice_level', type_='foreignkey')
        batch_op.alter_column('theme',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('level',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('theme_id')
        batch_op.drop_column('level_id')

    with op.batch_alter_table('exercice_tags', schema=None) as batch_op:
        batch_op.alter_column('exercice_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    # Pour le downgrade, assurez-vous d'utiliser les mêmes noms de contraintes
    op.drop_table('themes')  # SQLite ignore les noms de contraintes lors du drop
    op.drop_table('levels')  # SQLite ignore les noms de contraintes lors du drop
    # ### end Alembic commands ###
